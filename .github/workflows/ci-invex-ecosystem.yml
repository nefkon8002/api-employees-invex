###By Neftali Ramirez Chavez
name: ci.invex-ecosystem
on:
  push:
    branches: ['develop','qa', 'release-*','production']
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 0}
      - name: Login to CallingNinja Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.plusnetwork.cloud:5000
          username: ${{ secrets.PLUSNETWORK_USERNAME }}
          password: ${{ secrets.PLUSNETWORK_PASSWORD }} 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push component plusnetwork-api-employee
        uses: docker/build-push-action@v5
        with:
          context: ./plusnetwork-api-employee
          file: Dockerfile
          push: true
          tags: ${{ secrets.PLUSNETWORK }}/plusnetwork-api-employee:1.0

      # - name: Build and push component callingninja-api-multifile-uploader
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./callingninja-api-multifile-uploader
      #     file: Dockerfile
      #     push: true
      #     tags: ${{ secrets.CALLINGNINJA }}/callingninja-api-multifile-uploader:1.0
  # test:
  #   name: ci.callingninja-ecosystem - Test Unit & Integration/SonarCloud Scan/Slack WebHook
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with: {fetch-depth: 0}
  #       #### Para cada componente del ecosystema callingninja se debe de poner su respectivo action que se encargue 
  #       #### de crear el respectivo set de pruebas:: API USER ok 
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: 8
  #     - name: Unit & Integration Tests
  #       run: mvn -B verify ## Verify command for compose 
  #       env:
  #         JWT_SECRET: ${{ secrets.JWT_SECRET }}

  #     - name: Slack WebHook
  #       if: failure()
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: ${{ job.status }}
  #         fields: repo,author,commit,author,workflow, # selectable (default: repo,message)
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      
  #     - name: Sonar
  #       if: success() # always() failure() success()
  #       run: >
  #         mvn -B verify -DskipTests sonar:sonar
  #         -Dsonar.projectKey=
  #         -Dsonar.organization=callingninja.com.mx
  #         -Dsonar.host.url=https://sonarcloud.io
  #         -Dsonar.login=$SONAR_TOKEN
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

